---

# --- general settings ---

# dirs
ubuntu_profile_dir: '/etc/profile.d'
services_dir: '{{ guest_home_dir }}/services'
markers_dir: '{{ guest_home_dir }}/markers'
web_partial_dir: '{{ guest_home_dir }}/html.d'
www_dir: '{{ guest_home_dir }}/www'
config_dir: '{{ guest_home_dir }}/config'
log_dir: '{{ guest_home_dir }}/logs'

systemd_services_dir: '/etc/systemd/system'
import_dir: '{{ guest_home_dir }}/import'

# shared files
logback_config_path: '{{ config_dir }}/logback.xml'
systemd_env_vars_path: '{{ config_dir }}/systemd-env-vars'
bash_env_vars_path: '{{ ubuntu_profile_dir }}/02-additional-env-vars.sh'

# web
web_base_host: '127.0.0.1'
web_base_authority: '{{ web_base_host }}:{{ specified_ports.web_service_port }}'
web_base_authority_https: '{{ web_base_host }}:{{ specified_ports.web_service_https_port }}'
web_base_url: 'http://{{ web_base_authority }}'
web_base_https_url: 'https://{{ web_base_authority_https }}'

web_base_local_host: 'localhost'
web_base_local_authority: '{{ web_base_local_host }}:{{ specified_ports.web_service_port }}'
web_base_local_authority_https: '{{ web_base_local_host }}:{{ specified_ports.web_service_https_port }}'
web_base_local_url: 'http://{{ web_base_local_authority }}'
web_base_local_https_url: 'https://{{ web_base_local_authority_https }}'

# nginx
nginx_conf_partial_path: '/etc/nginx/conf.d'
nginx_conf_path: '/etc/nginx/nginx.conf'
nginx_proxy_headers_conf_path: '{{ nginx_conf_partial_path }}/nginx-proxy-headers.conf'

# --- services and names ---

local_host: 'localhost'

deployment_name: 'Local Biocollect dev'
deployment_short: '[dev]'
org_name_long: '[ORG LONG]'
org_name_short: '[ORG SHORT]'
proj_name_long: '[PROJ LONG]'
proj_name_short: '[PROJ SHORT]'

# object store service
objectstore_service_username: 'object-service-username'

# mongo
mongo_service_auth_database: 'admin'
mongo_service_root_username: 'mongodb_admin'
mongo_service_auth_mechanism: 'SCRAM-SHA-256'
mongo_default_uri_options: 'ssl=false&authSource={{ mongo_service_auth_database }}&authMechanism={{ mongo_service_auth_mechanism }}&connectTimeoutMS=30000&socketTimeoutMS=30000'
mongo_default_check_result: "if((r.hasOwnProperty('ok') && r.ok != 1)||r.hasOwnProperty('writeConcernError')||r.hasOwnProperty('writeError')||r.hasOwnProperty('writeErrors')){printjson(r);throw('Mongo error.');}"

# mysql
mysql_service_root_host: '%'
mysql_service_root_username: 'root'

mysql_service_entrypoint_file: 'mysql-update-root-host.sql'
mysql_service_entrypoint_path: '{{ services_dir }}/{{ mysql_service_entrypoint_file }}'

# connection url notes:
# - https://dev.mysql.com/doc/connectors/en/connector-j-connp-props-security.html
# - https://dev.mysql.com/doc/connectors/en/connector-j-connp-props-networking.html
# - allowPublicKeyRetrieval=true is required to allow authenticating using caching_sha2_password auth plugin
mysql_default_uri_options: 'useSSL=false&requireSSL=false&sslMode=DISABLED&allowPublicKeyRetrieval=true&serverTimezone={{ timezone_name | urlencode }}&zeroDateTimeBehavior=convertToNull&characterEncoding=UTF-8'
mysql_base_url: 'jdbc:mysql://{{ web_base_host }}:{{ specified_ports.mysql_service_port }}'

# elasticsearch
# default username for elasticsearch is 'elastic', see https://www.elastic.co/guide/en/elasticsearch/reference/7.16/security-minimal-setup.html#security-create-builtin-users
elasticsearch_service_root_username: 'elastic'

# --- apt source installs ---

java_8_home_dir: '/usr/lib/jvm/java-8-openjdk-amd64'
java_8_java_file: '{{ java_8_home_dir }}/bin/java'
java_8_keytool_path: '{{ java_8_home_dir }}/jre/bin/keytool'
java_8_cacert_path: '{{ java_8_home_dir }}/jre/lib/security/cacerts'

java_11_home_dir: '/usr/lib/jvm/java-11-openjdk-amd64'
java_11_java_file: '{{ java_11_home_dir }}/bin/java'
java_11_keytool_path: '{{ java_11_home_dir }}/bin/keytool'
java_11_cacert_path: '{{ java_11_home_dir }}/lib/security/cacerts'

docker_compose_file: 'docker-compose.yml'
docker_compose_path: '{{ services_dir }}/{{ docker_compose_file }}'


apt_source_items:
  # docker
  - name: 'docker'
    gpg_url: 'https://download.docker.com/linux/ubuntu/gpg'
    gpg_fingerprint_expected: '9DC858229FC7DD38854AE2D88D81803C0EBFCD88'
    apt_url: 'https://download.docker.com/linux/ubuntu'
    apt_arch: '{{ vagrant_architecture | lower }}'
    apt_dist: '{{ ubuntu_release | lower }}'
    apt_component: 'stable'
    packages:
      - name: 'docker-ce'
        version: '{{ specified_versions.docker_ce }}'
        origin: 'Docker'
      - name: 'docker-ce-cli'
        version: '{{ specified_versions.docker_ce }}'
        origin: 'Docker'
      - name: 'containerd.io'
        version: '{{ specified_versions.containerd }}'
        origin: 'Docker'
      - name: 'docker-compose-plugin'
        version: '{{ specified_versions.compose }}'
        origin: 'Docker'

  # nginx
  - name: 'nginx'
    gpg_url: 'https://nginx.org/keys/nginx_signing.key'
    gpg_fingerprint_expected: '573BFD6B3D8FBC641079A6ABABF5BD827BD9BF62'
    apt_url: 'http://nginx.org/packages/ubuntu'
    apt_arch: '{{ vagrant_architecture | lower }}'
    apt_dist: '{{ ubuntu_release | lower }}'
    apt_component: 'nginx'
    packages:
      - name: 'nginx'
        version: '{{ specified_versions.nginx }}'
        origin: 'nginx'

  # node js
  - name: 'nodesource'
    gpg_url: 'https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key'
    gpg_fingerprint_expected: '6F71F525282841EEDAF851B42F59B5F99B1BE0B4'
    apt_url: 'https://deb.nodesource.com/node_{{ specified_versions.nodejs }}.x'
    apt_arch: '{{ vagrant_architecture | lower }}'
    apt_dist: 'nodistro'
    apt_component: 'main'
    packages:
      - name: 'nodejs'
        version: '{{ specified_versions.nodejs }}.*'
        origin: 'nodistro'

# --- dashboard app ---

app_dashboard_python_venv_dir: '{{ guest_home_dir }}/dashboard-venv'
app_dashboard_service_path: '{{ services_dir }}/status_dashboard.py'
app_dashboard_systemd_service_path: '{{ systemd_services_dir }}/status-dashboard.service'
