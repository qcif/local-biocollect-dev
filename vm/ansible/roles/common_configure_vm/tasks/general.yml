---

# general

- name: Set timezone to {{ timezone_name }}
  community.general.timezone:
    name: '{{ timezone_name }}'

- name: Ensure ufw firewall is disabled, as this is a dev machine
  ansible.builtin.ufw:
    state: 'disabled'

- name: Create directories for root
  ansible.builtin.file:
    path: '{{ item }}'
    state: 'directory'
    owner: 'root'
    group: 'root'
    mode: 'u=rwx,g=rx,o=rx'
  loop:
    - '{{ www_dir }}'

- name: Create directories for vagrant
  ansible.builtin.file:
    path: '{{ item }}'
    state: 'directory'
    owner: 'vagrant'
    group: 'vagrant'
    mode: 'u=rwx,g=rx,o=rx'
  loop:
    - '{{ services_dir }}'
    - '{{ markers_dir }}'
    - '{{ web_partial_dir }}'
    - '{{ config_dir }}'
    - '{{ log_dir }}'

# additional vars

- name: Template the bash additional env vars file
  ansible.builtin.template:
    src: 'additional-env-vars.sh'
    dest: '{{ bash_env_vars_path }}'
    force: true
    backup: false
    owner: 'root'
    group: 'root'
    mode: 'u=rw,g=r,o=r'

- name: Template the systemd additional env vars file
  ansible.builtin.template:
    src: 'additional-env-vars.ini'
    dest: '{{ systemd_env_vars_path }}'
    force: true
    backup: false
    owner: 'root'
    group: 'root'
    mode: 'u=rw,g=r,o=r'

# logging config files
- name: Template the shared logback config file
  ansible.builtin.template:
    src: 'logback.xml'
    dest: '{{ logback_config_path }}'
    force: true
    backup: false
    owner: 'root'
    group: 'root'
    mode: 'u=rw,g=r,o=r'

# java
- name: Install java
  ansible.builtin.apt:
    name:
      - 'openjdk-8-jdk-headless'
      - 'openjdk-8-dbg'
      - 'openjdk-11-jdk-headless'
      - 'openjdk-11-dbg'
    state: 'present'

# apt packages
- name: Configure apt source and install packages
  ansible.builtin.include_role:
    name: common_apt_source
  vars:
    apt_source_name: '{{ item.name }}'
    apt_source_ubuntu_gpg_url: '{{ item.gpg_url }}'
    apt_source_ubuntu_gpg_fingerprint_expected: '{{ item.gpg_fingerprint_expected }}'
    apt_source_ubuntu_apt_url: '{{ item.apt_url }}'
    apt_source_ubuntu_apt_arch: '{{ item.apt_arch }}'
    apt_source_ubuntu_apt_dist: '{{ item.apt_dist }}'
    apt_source_ubuntu_apt_component: '{{ item.apt_component }}'
    apt_source_packages: '{{ item.packages }}'
  loop: '{{ apt_source_items }}'

# update the java cacerts keystore password

- name: Check if Java cacerts keystore changed file exists
  ansible.builtin.stat:
    path: '{{ markers_dir }}/java-cacert-password'
  register: java_cacert_password_changed_result

- name: Change password for Java cacerts keystore
  ansible.builtin.command:
    cmd: >
      {{ java_11_keytool_path }}
      -storepasswd
      -storepass 'changeit'
      -keystore '{{ java_11_cacert_path }}'
      -new '{{ java_cacert_password }}'
  when: not java_cacert_password_changed_result.stat.exists

- name: Create Java cacerts keystore changed file
  ansible.builtin.file:
    path: '{{ markers_dir }}/java-cacert-password'
    state: touch
    owner: 'vagrant'
    group: 'vagrant'
    mode: 'u=rw,g=r,o=r'
  when: not java_cacert_password_changed_result.stat.exists
