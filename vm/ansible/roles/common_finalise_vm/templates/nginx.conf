
# {{ ansible_managed }}

user                    nginx nginx;
error_log               /var/log/nginx/error.log debug;
pid                     /var/run/nginx.pid;
worker_processes        auto;

events {
  worker_connections    1024;
  multi_accept          off;
}

http {
  charset               utf-8;
  include               /etc/nginx/mime.types;
  default_type          application/octet-stream;
  root                  {{ www_dir }};

  client_max_body_size  100m;
  map_hash_bucket_size  128;

  log_format            main    '$remote_addr - $remote_user [$time_local] "$request" '
                                '$status $body_bytes_sent "$http_referer" '
                                '"$http_user_agent" $http_x_forwarded_for $http_x_forwarded_proto $http_true_client_ip';

  access_log            /var/log/nginx/access.log  main;

  sendfile              on;
  tcp_nopush            on;
  tcp_nodelay           on;

  keepalive_timeout     65;
  keepalive_requests    100;

  proxy_http_version    1.1;

  # compress text and generic binary responses
  gzip                  on;
  gzip_types            text/plain application/xml application/html text/json application/json text/javascript application/javascript text/css application/css application/octet-stream;
  gzip_min_length       1024;

  # General security
  # add headers for helping with common issues - html frame, wrong media type, XSS checks
  # don't entirely prevent iframes, as some apps use iframes
  add_header            X-Frame-Options "sameorigin" always;
  add_header            X-Content-Type-Options "nosniff" always;
  add_header            X-XSS-Protection "1; mode=block" always;
  add_header            Referrer-Policy "origin-when-cross-origin" always;

  # Remove the nginx version (but keeps the 'Server: nginx' header).
  server_tokens         off;

  # http server
  server {

    # basic server config
    listen              {{ specified_ports.web_service_port }} default_server;
    listen              [::]:{{ specified_ports.web_service_port }} default_server;
    server_name         {{ web_base_host }} {{ local_host }} _;

    index               index.html;
    proxy_read_timeout  60s;
    autoindex           on;

    # Note 1: If you don't want to pass the location match, add a trailing slash to the proxy_pass.
    #         If you do want to pass the location match, don't add a trailing slash to the proxy_pass.
    #         https://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_pass

    # Note 2: "If a location is defined by a prefix string that ends with the slash character,
    #         and requests are processed by one of proxy_pass, fastcgi_pass, uwsgi_pass, scgi_pass,
    #         memcached_pass, or grpc_pass, then the special processing is performed. In response to a
    #         request with URI equal to this string, but without the trailing slash, a permanent redirect
    #         with the code 301 will be returned to the requested URI with the slash appended."
    #         https://nginx.org/en/docs/http/ngx_http_core_module.html#location

    # Note 3: One notable outcome of the location + proxy_pass processing is that if there is no trailing slash
    #         in the location, and there is a trailing slash in the proxy_pass, this can result in a duplicate slash
    #         in the url seen by the proxied server. This is because the slash after the location match is included
    #         directly after the trailing slash in the proxy_pass directive.

    # adminer ui
    location /db-ui-service/ {
      include           {{ nginx_proxy_headers_conf_path }};
      proxy_pass        http://{{ web_base_host }}:{{ specified_ports.db_ui_service_http_port }}/;
    }

    # mongo express ui
    location /mongo-ui-service/ {
      include           {{ nginx_proxy_headers_conf_path }};
      proxy_pass        http://{{ web_base_host }}:{{ specified_ports.mongo_ui_service_http_port }}/mongo-ui-service/;
    }

    # pdf service
    location /pdf-service/ {
      include           {{ nginx_proxy_headers_conf_path }};
      proxy_pass        http://{{ web_base_host }}:{{ specified_ports.pdf_service_port }}/;
    }

    # mail service
    location /mail-service/ {
      include           {{ nginx_proxy_headers_conf_path }};
      proxy_pass        http://{{ web_base_host }}:{{ specified_ports.mail_service_smtp_port }}/;
    }
    location /mail-ui-service/ {
      include           {{ nginx_proxy_headers_conf_path }};
      proxy_pass        http://{{ web_base_host }}:{{ specified_ports.mail_service_http_port }}/;
    }

    # objectstore service
    location /objectstore-service/ {
      include           {{ nginx_proxy_headers_conf_path }};
      proxy_pass        http://{{ web_base_host }}:{{ specified_ports.objectstore_service_main_port }}/;
    }
    location /objectstore-ui-service/ {
      include           {{ nginx_proxy_headers_conf_path }};
      proxy_pass        http://{{ web_base_host }}:{{ specified_ports.objectstore_service_console_port }}/;
    }

    # server sent events endpoint
    location /sse/ {
      include           {{ nginx_proxy_headers_conf_path }};
      proxy_pass        http://{{ web_base_host }}:{{ specified_ports.dashboard_http_port }}/;
    }

    # include apps and plugins
    include {{ nginx_conf_partial_path }}/app_*.conf;
    include {{ nginx_conf_partial_path }}/plugin_*.conf;

    # home page
    location = / {
        autoindex       off;
    }

    # catch all
    location / {
        autoindex       off;
    }
  }

  # https server
  server {
    listen              {{ specified_ports.web_service_https_port }} ssl http2;
    listen              [::]:{{ specified_ports.web_service_https_port }} ssl http2;
    server_name         {{ web_base_host }} {{ local_host }} _;

    index               index.html;
    proxy_read_timeout  60s;
    autoindex           on;

    # ssl_certificate - path to the server certificate in PEM format.
    # Any intermediate (e.g. CA) certificates MUST be included AFTER the server certificate.
    ssl_certificate             {{ app_cas_java_cert_pem_path }};
    # ssl_certificate_key - path to the secret key in PEM format.
    ssl_certificate_key         {{ app_cas_java_key_pem_path }};
    ssl_session_timeout         240m;
    ssl_session_cache           shared:SSL:10m;
    ssl_session_tickets         off;
    ssl_dhparam                 {{ server_ssl_dhparam_file }};
    ssl_protocols               TLSv1.2 TLSv1.3;
    ssl_ciphers                 {% for nginx_ssl_cipher in nginx_ssl_ciphers %}{{ nginx_ssl_cipher }}{% if not loop.last %}:{% endif %}{% endfor %};
    ssl_prefer_server_ciphers   off;
    ssl_ecdh_curve              auto;
    add_header                  Strict-Transport-Security "max-age=86400; includeSubdomains" always;
    resolver                    1.1.1.1 1.0.0.1 8.8.8.8 8.8.4.4 208.67.222.222 208.67.220.220 [2606:4700:4700::1111] [2606:4700:4700::1001] [2001:4860:4860::8888] [2001:4860:4860::8844] [2620:119:35::35] [2620:119:53::53] valid=60s;
    resolver_timeout            2s;

    # server sent events endpoint
    location /sse/ {
      include           {{ nginx_proxy_headers_conf_path }};
      proxy_pass        http://{{ web_base_host }}:{{ specified_ports.dashboard_http_port }}/;
    }

    # include apps and plugins
    include {{ nginx_conf_partial_path }}/app_*.conf;
    include {{ nginx_conf_partial_path }}/plugin_*.conf;

    # home page
    location = / {
        autoindex       off;
    }

    # catch all
    location / {
        autoindex       off;
    }
  }
}
