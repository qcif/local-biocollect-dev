---
# settings
app_cas_name: 'app_cas'
app_cas_group: 'app'
app_cas_category: 'auth'
app_cas_builder: 'maven'
app_cas_java: '11'
app_cas_ports:
  http: '{{ specified_ports.cas_http_port }}'
  debug: '{{ specified_ports.cas_debug_port }}'
app_cas_links:
  tests: 'target/site/surefire-report.html'

# paths
app_cas_config_dir: '/data/cas/config'
app_cas_helper_path: '{{ ubuntu_profile_dir }}/03-helper-app-cas.sh'
app_cas_entry_nginx_path: '{{ nginx_conf_partial_path }}/{{ app_cas_name }}.conf'
app_cas_entry_html_path: '{{ web_partial_dir }}/{{ app_cas_name }}.html'
app_cas_systemd_service_path: '{{ systemd_services_dir }}/{{ app_cas_name }}.service'
app_cas_config_path: '{{ app_cas_config_dir }}/cas-config.yml'
app_cas_config_pwe_path: '{{ app_cas_config_dir }}/cas-pwe-config.properties'
app_cas_source_dir: '{{ guest_src_dir }}/ala-cas-5'
app_cas_log4j2_config_path: '{{ app_cas_config_dir }}/log4j2.xml'
app_cas_tomcat_logging_path: '{{ app_cas_config_dir }}/tomcat-logging.properties'

# databases
app_cas_mysql_db_main_database: 'cas_main'
app_cas_mysql_db_main_username: 'cas_main'

app_cas_mysql_db_test_database: 'cas_test'
app_cas_mysql_db_test_username: 'cas_test'

app_cas_mongo_db_main_username: 'cas_main'
app_cas_mongo_db_main_database: 'cas_main'
app_cas_mongo_db_main_collection_audit: 'cas_audit'
app_cas_mongo_db_main_collection_services: 'cas_services'

app_cas_mongo_db_spring_data_username: 'cas_spring_data'
app_cas_mongo_db_spring_data_database: 'cas_spring_data'

# security
app_cas_spring_security_username: 'cas_spring_user'

# Settings that resemble production to test the built artifact.
app_cas_java_sys_props:
  - 'java.awt.headless=true'
  - 'cas.standalone.configurationDirectory={{ app_cas_config_dir }}'
  - 'cas.standalone.config={{ app_cas_config_dir }}'
  - 'ala.password.properties={{ app_cas_config_pwe_path }}'
  - 'log4j2.formatMsgNoLookups=true'
  - 'spring.output.ansi.enabled=never'
  - 'file.encoding=UTF-8'
  - 'java.util.logging.config.file={{ app_cas_tomcat_logging_path }}'

app_cas_java_jvm_opts:
  - 'XX:+UseG1GC'
  - 'Xms256m'
  - 'Xmx800m'
  - 'XX:ErrorFile={{ services_dir }}/{{ app_cas_name }}_hs_err_pid_%p.log'

app_cas_env_vars:
  - key: 'SPRING_CONFIG_LOCATION'
    value: 'file:{{ app_cas_config_path }}'
  - key: 'LOG4J_FORMAT_MSG_NO_LOOKUPS'
    value: 'true'
  - key: 'LOGGING_DIR'
    value: '{{ log_dir }}'

# cas service definition
app_cas_db_services_defs: [
  {
    "_class": "org.apereo.cas.services.RegexRegisteredService",
    "_id": 101,
    "id": 101,
    "name": "Local development services",
    "description": "Local development",
    "logo": '{{ web_base_url }}/{{ app_theme_name }}/img/favicon.png',
    "serviceId": "^https?://(127\\.0\\.0\\.1|localhost|::1\/128|::1|0:0:0:0:0:0:0:1)(:\\d+)?(/.*|$)",
    "theme": "ala",
    "logoutType": "BACK_CHANNEL",
    "evaluationOrder": 1,
    "requiredHandlers": [ ],
    "properties": { },
    "contacts": [ ],
    "usernameAttributeProvider": {
      # see https://apereo.github.io/cas/6.5.x/integration/Attribute-Release-PrincipalId.html
      "_class": "org.apereo.cas.services.DefaultRegisteredServiceUsernameProvider",
      "canonicalizationMode": "NONE",
      "encryptUsername": false
    },
    "attributeReleasePolicy": {
      # see https://apereo.github.io/cas/6.5.x/integration/Attribute-Release-Policies.html
      "_class": "org.apereo.cas.services.ReturnAllAttributeReleasePolicy",
      "principalAttributesRepository": {
        "_class": "org.apereo.cas.authentication.principal.DefaultPrincipalAttributesRepository",
        "expiration": 4,
        "timeUnit": "HOURS"
      },
      "consentPolicy": {
        "_class": "org.apereo.cas.services.consent.DefaultRegisteredServiceConsentPolicy",
        "enabled": true
      },
      "authorizedToReleaseCredentialPassword": false,
      "authorizedToReleaseProxyGrantingTicket": false,
      "excludeDefaultAttributes": false,
      "authorizedToReleaseAuthenticationAttributes": true
    },
    "multifactorPolicy": {
      # see https://apereo.github.io/cas/6.5.x/mfa/Configuring-Multifactor-Authentication.html
      "_class": "org.apereo.cas.services.DefaultRegisteredServiceMultifactorPolicy",
      "multifactorAuthenticationProviders": [ ],
      "failureMode": "UNDEFINED",
      "bypassEnabled": false
    },
    "accessStrategy": {
      # see https://apereo.github.io/cas/6.5.x/services/Configuring-Service-Access-Strategy.html
      "_class": "org.apereo.cas.services.DefaultRegisteredServiceAccessStrategy",
      "enabled": true,
      "ssoEnabled": true,
      "requireAllAttributes": true,
      "requiredAttributes": { },
      "rejectedAttributes": { },
      "caseInsensitive": false,
      "delegatedAuthenticationPolicy": {
        # see https://apereo.github.io/cas/6.5.x/integration/Delegate-Authentication-AuthenticationPolicy.html
        "_class": "org.apereo.cas.services.DefaultRegisteredServiceDelegatedAuthenticationPolicy",
        "allowedProviders": [ ],
        "permitUndefined": true,
        # "exclusive" means
        # "Decides whether authentication should be exclusively limited to allowed providers, disabling other methods such as username/password, etc."
        # Use false to allow other methods.
        "exclusive": false
      }
    }
  }
]

